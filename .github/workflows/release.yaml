name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    name: Goreleaser
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        go: ["1.23.7"]
    permissions:
      attestations: write
      id-token: write
      contents: write
      packages: write
    steps:
      - name: Code checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: ${{ matrix.go }}

      - name: Install cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Install syft
        uses: anchore/sbom-action/download-syft@9f7302141466aa6482940f15371237e9d9f4c34a # v0.19.0

      - name: Install ko
        uses: ko-build/setup-ko@d982fec422852203cfb2053a8ec6ad302280d04d # v0.8

      # https://github.com/actions/checkout/issues/290#issuecomment-680260080
      - name: Fetch upstream tags
        run: git fetch --tags --force

      - name: Run Goreleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1
        with:
          args: release --clean

      - name: Generate SLSA metadata
        id: slsa
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
          METADATA: "${{ steps.run-goreleaser.outputs.metadata }}"
        run: |
          set -euo pipefail

          checksum_file="$(echo "$ARTIFACTS" | jq -r '.[] | select (.type == "Checksum") | .path')"
          echo 'hashes='"$(base64 -w0 < "$checksum_file")" >> "$GITHUB_OUTPUT"
          tag_name="$(echo "$METADATA" | jq -r '.tag')"
          echo 'tag_name='"$tag_name" >> "$GITHUB_OUTPUT"
    outputs:
      hashes: "${{ steps.slsa.outputs.hashes }}"
      tag_name: "${{ steps.slsa.outputs.tag_name }}"

  provenance:
    name: Provenance
    needs:
      - goreleaser
    permissions:
      actions: read
      id-token: write
      contents: write
    # Must be refernced by a tag. https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/generic/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      provenance-name: "provenance.intoto.jsonl"
      upload-assets: true
      # Use the existing release created by Goreleaser instead of creating another.
      upload-tag-name: "${{ needs.goreleaser.outputs.tag_name }}"
      # Ensure the release is a draft and doesn't create a new release that is published.
      draft-release: true
