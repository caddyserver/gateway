name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    name: Goreleaser
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        go: ["1.25.1"]
    permissions:
      attestations: write
      id-token: write
      contents: write
      packages: write
    steps:
      - name: Code checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go }}

      - name: Install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Install syft
        uses: anchore/sbom-action/download-syft@da167eac915b4e86f08b264dbdbc867b61be6f0c # v0.20.5

      - name: Install ko
        uses: ko-build/setup-ko@d006021bd0c28d1ce33a07e7943d48b079944c8d # v0.9

      # https://github.com/actions/checkout/issues/290#issuecomment-680260080
      - name: Fetch upstream tags
        run: git fetch --tags --force

      - name: Run Goreleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1
        with:
          args: release --clean

      - name: Generate SLSA metadata
        id: slsa
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
          METADATA: "${{ steps.run-goreleaser.outputs.metadata }}"
        run: |
          set -euo pipefail

          checksum_file="$(echo "$ARTIFACTS" | jq -r '.[] | select (.type == "Checksum") | .path')"
          echo 'hashes='"$(base64 -w0 < "$checksum_file")" >> "$GITHUB_OUTPUT"
          tag_name="$(echo "$METADATA" | jq -r '.tag')"
          echo 'tag_name='"$tag_name" >> "$GITHUB_OUTPUT"
    outputs:
      hashes: "${{ steps.slsa.outputs.hashes }}"
      tag_name: "${{ steps.slsa.outputs.tag_name }}"

  provenance:
    name: Provenance
    needs:
      - goreleaser
    permissions:
      actions: read
      id-token: write
      contents: write
    # Must be refernced by a tag. https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/generic/README.md#referencing-the-slsa-generator
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      provenance-name: "provenance.intoto.jsonl"
      upload-assets: true
      # Use the existing release created by Goreleaser instead of creating another.
      upload-tag-name: "${{ needs.goreleaser.outputs.tag_name }}"
      # Ensure the release is a draft and doesn't create a new release that is published.
      draft-release: true
