# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 1

before:
  hooks:
    - go mod tidy
    - /bin/bash -c 'if [ -n "$(git --no-pager diff --exit-code go.mod go.sum)" ]; then exit 1; fi'

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

report_sizes: true

builds:
  - id: gateway
    binary: gateway
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath

kos:
  - build: gateway
    repository: ghcr.io/caddyserver/gateway
    platforms:
      - linux/amd64
      - linux/arm64
    tags:
      - '{{.Tag}}'
      # TODO: find a way to set the latest package tag, only when the release gets published on GitHub.
      # we can trigger an action on release_published, but we then need to write a system that "pushes"
      # the `latest` manifest.
      - '{{ if not .Prerelease }}latest{{ end }}'
    creation_time: '{{.CommitTimestamp}}'
    ko_data_creation_time: '{{.CommitTimestamp}}'
    sbom: 'spdx'
    bare: true
    preserve_import_paths: false

checksum:
  algorithm: sha256
  name_template: "CHECKSUMS.txt"

sboms:
  - artifacts: binary
    cmd: syft
    args:
      - "${artifact}"
      - "--file"
      - "${document}"
      - "--output"
      - "spdx-json"

signs:
  - cmd: cosign
    artifacts: all
    output: true
    args:
      - sign-blob
      - --yes
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"

docker_signs:
  - cmd: cosign
    artifacts: all
    output: true
    args:
      - sign
      - --yes
      - "${artifact}"

release:
  draft: true
  prerelease: auto

changelog:
  use: github
  sort: asc
  filters:
    exclude:
    - '^chore:'
    - '^ci:'
    - '^docs?:'
    - '^readme:'
    - '^tests?:'
    - '^\w+\s+' # a hack to remove commit messages without colons thus don't correspond to a package
